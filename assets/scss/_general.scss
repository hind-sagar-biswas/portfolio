html {
	scroll-behavior: initial;
	scroll-snap-type: mandatory;
}

body {
	background-color: $grey_900;
	color: $grey_300;
	scroll-snap-type: y mandatory;
}

li {
	list-style-type: none;
}

@for $i from 1 to 7 {
	h#{$i} {
		text-transform: uppercase;
	}
}

// TEXT COLORS
@each $name, $color in $colors {
	.text-#{$name} {
		color: $color;
	}
	.border-#{$name} {
		border-color: $color;
	}
	.bg-#{$name} {
		background-color: $color !important;
	}
}

// FORM
form {
	button[type='submit']{
		border: 2px solid $primary_0;
		background-color: transparent;

		padding: 10px 30px;
		color: $primary_0;
		outline: none;

		&:hover, &:focus{
			color: $grey_900;
			background-color: $primary_0;
		}
	}
}

.form-control {
  display: block;
  width: 100%;
  color: $grey_300;
  background-color: transparent;
  border: 2px solid $grey_200;
  border-radius: 0;

  &:focus {
    color: $grey_300;
    background-color: $grey_800;
    border-color: $primary_0;
    outline: 0;
  }
}

.scroll-target {
	transition: 0.3s all ease-out;
}

.divider {
	width: 100%;
	border: 2px solid $grey_500;
	border-color: transparent;
	border-radius: 5px;
	margin: 20px;
	margin-inline: 2px;
}

// BACKGROUND GRAPHH STYLING
#graph {
	z-index: -1;
	pointer-events: none;

	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;

	position: fixed;
	top: 0;
	left: 0;
	width: 100svw;
	height: 100svh;
}

.row {
	display: flex;
}

.cell {
	width: calc(100svw / $col);
	height: calc(100svh / $row);
	display: flex;
	justify-content: center;
	align-items: center;
	padding: 0;
	pointer-events: none;

	opacity: 0.5;
}

.blocked {
	background-color: darken($grey_900, 3%);
}

// PROFILE STYLINGS
.profile-col {
	min-height: 100svh;
	isolation: isolate;

	.profile-container {
		$radius: 50%;
		$width: 350;
		$rotation: 10deg;
		$distance: 15px;
		$rotator_color: $grey_500;

		position: fixed;
		top: 50svh;
		left: calc(100% - ($width * 1px) + 20px);
		max-width: calc($width * 1px) + calc($distance * $layers);
		width: 100%;
		aspect-ratio: 1;

		border-radius: calc($radius + 10px);
		// border: 10px solid $grey_800;
		background-color: $grey_800;
		overflow: visible;

		transform-origin: center;
		transform: translate(-50%, -50%);

		.round-container {
			width: 100%;
			aspect-ratio: 1;
			position: relative;
			border-radius: inherit;

			.social-container {
				width: 100%;
				aspect-ratio: 1;
				display: flex;
				justify-content: center;
				align-items: center;

				.social-list {
					position: relative;
					transform-origin: center;
					transform: translate(-50%, -50%);

					.social-link {
						position: absolute;
						transform-origin: center;

						color: $grey_300;
						font-size: 1.5em;
						transition: 0.3s font ease-out;

						&:hover {
							font-size: 1.6em;
						}

						@for $i from 1 to $social_links + 1 {
							&:nth-child(#{$i}) {
								$angle: calc((90 / $social_links) * $i * 1deg);
								$offset: 4em;
								$radius: calc(($width / 2 * 1px) + $offset);

								$x: calc(($radius * math.cos($angle)));
								$y: calc(($radius * math.sin($angle)));

								transform: translate(calc(-50% + $x), calc(-50% + $y));
							}
						}
					}
				}
			}

			.moving-layers {
				border-radius: inherit;
				aspect-ratio: 1;
				position: absolute;
				top: 50%;
				left: 50%;
				transform-origin: center;
				transform: translate(-50%, -50%);

				animation-name: profile_layer_rotation;
				animation-iteration-count: infinite;
				animation-direction: alternate;
				animation-timing-function: ease-in-out;
			}

			@for $i from 1 to $layers + 1 {
				.moving-layers.layer-#{$i} {
					background-color: $rotator_color;

					background-size: 100% 100%;
					background-position: 0px 0px;

					animation-duration: calc(20s / $i);

					$gap_width: 1%;
					$random_percentage: calc(math.floor(math.random() * 100) * 1%);
					@if $i % 2 == 1 {
						width: calc(100% - (($i - 1) * $distance));
						background-image: conic-gradient(
							from calc((360deg / ($layers + 1)) * $i) at 50% 50%,
							$grey_800 0% $gap_width,
							$rotator_color $gap_width $random_percentage,
							$grey_800
								$random_percentage
								calc($random_percentage + $gap_width),
							$rotator_color calc($random_percentage + $gap_width) 100%
						);
					} @else {
						width: calc(100% - (($i - 1) * $distance));
						background-image: conic-gradient(
							from calc((360deg / ($layers + 1)) * $i) at 50% 50%,
							$rotator_color 0% $gap_width,
							$grey_800 $gap_width $random_percentage,
							$rotator_color
								$random_percentage
								calc($random_percentage + $gap_width),
							$grey_800 calc($random_percentage + $gap_width) 100%
						);
					}
				}
			}

			img {
				// clip-path: circle(50% at 50% 50%);
				border-radius: $radius;

				max-width: calc($width * 1px);
				width: 100%;
				// aspect-ratio: 1;

				border: 5px solid $rotator_color;

				position: absolute;
				top: 50%;
				left: 50%;
				transform-origin: center;
				transform: translate(-50%, -50%);
			}
		}
	}
}

// CONTENTS SECTIONS STYLINGS
// .hero-container{
// 	scroll-snap-type: y mandatory;
// }
.hero {
	scroll-snap-align: start;
	min-height: 100svh;
	width: 100%;

	.hero-content {
		width: calc(100% - 300px);
		min-height: 350px;

		background: transparent;
		backdrop-filter: blur(4px);
		-webkit-backdrop-filter: blur(4px);
		border-radius: 10px;

		#type-writer-target {
			background: rgb(115, 236, 162);
			background: linear-gradient(
				90deg,
				rgba(115, 236, 162, 1) 0%,
				rgba(0, 255, 255, 1) 35%,
				rgba(0, 212, 255, 1) 100%
			);
			background-clip: text;
			-webkit-background-clip: text;
			-webkit-text-fill-color: transparent;
		}

		.social-container {
			background: rgb(115, 236, 162);
			background: linear-gradient(
				90deg,
				rgba(115, 236, 162, 1) 0%,
				rgba(0, 255, 255, 1) 35%,
				rgba(0, 212, 255, 1) 100%
			);

			width: 100%;
			height: 3em;

			display: flex;
			justify-content: flex-start;
			align-items: center;
			gap: 20px;
			padding: 0;
			background-clip: text;

			li {
				list-style: none;

				.social-link {
					text-decoration: none;
					color: $grey_300;

					font-size: 1em;
					transition: 0.3s font ease-out;

					&:hover {
						-webkit-text-fill-color: transparent;
						font-size: 1.5em;
					}
				}
			}
		}
	}
}

.link-buttons {
	width: 100%;
	gap: 5px;

	.link-btn {
		text-decoration: none;
		display: block;
		padding: 5px 15px;
		background-color: transparent;
		color: $grey_100;
		border: 1px solid $grey_100;
		font-weight: normal;
		text-transform: uppercase;
		transition: all 0.3s ease-out;

		&:hover {
			background-color: $grey_100;
			background: rgb(115, 236, 162);
			background: linear-gradient(
				90deg,
				rgba(0, 255, 255, 1) 0%,
				rgba(0, 212, 255, 1) 100%
			);
			color: $grey_900;
			border-color: transparent;
		}
	}
}

#skill-list {
	opacity: 1;
	transition: all 0.4s;
}
.skill {
	padding: 5px 10px 5px 20px;
	margin-bottom: 5px;
	background-color: $warning_0;
	color: $grey_900 !important;
	border-radius: 10px 0 10px 0;

	display: flex;
	gap: 10px;
	align-items: center;
}
#skill-list.hide {
	opacity: 0;
}

#language-list {
	#langs,
	#frameworks {
		display: flex;
		flex-wrap: wrap;
		align-items: center;
		gap: 10px;

		margin-top: 10px;
		padding: 10px;
		min-height: 100px;
		border-left: 2px solid $grey_300;
		position: relative;

		&::before {
			position: absolute;
			top: 50%;
			left: -17px;
			transform-origin: center;
			transform: translate(-50%, -50%) rotate(-90deg);
			color: $warning_0;
		}

		.tag {
			display: block;
			padding: 5px 10px;
			background-color: $success_0;
			color: $grey_900;
		}
	}

	#langs::before {
		content: "languages";
	}
	#frameworks::before {
		content: "frameworks";
	}
}
